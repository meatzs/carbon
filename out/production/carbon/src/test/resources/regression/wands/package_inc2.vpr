// Any copyright is dedicated to the Public Domain.
// http://creativecommons.org/publicdomain/zero/1.0/

field f: Int
field g: Ref
field h: Ref

method test01(x: Ref) 
requires acc(x.f) && x.f == 3
{
  //package acc(x.f,1/2) && x.f == 2 --* acc(x.f)


//x.f in rhs will be 2 and 3 --> inconsistent state
  package acc(x.f,1/2) && x.f == 2 --* acc(x.f) && false
  
  //:: ExpectedOutput(apply.failed:assertion.false)
  apply acc(x.f,1/2) && x.f == 2 --* acc(x.f) && false
}

method test02(x:Ref) 
requires acc(x.f)
{
  package acc(x.f,1/2) --* acc(x.f,1/2)&&acc(x.f,1/2)
  apply acc(x.f,1/2) --* acc(x.f,1/2)&&acc(x.f,1/2)
  exhale acc(x.f)

  //:: ExpectedOutput(assert.failed:assertion.false)
  assert false
}


method test03(x: Ref) 
requires acc(x.f,1/3) && x.f == 2
{

  //:: ExpectedOutput(package.failed:insufficient.permission)
  package acc(x.f,1/3) && x.f == 2 --* acc(x.f)
}

method test04(x: Ref) 
requires acc(x.f,1/3) && x.f == 3
{
  //here inconsistency on rhs
  package acc(x.f,1/3) && x.f == 2 --* acc(x.f)
  
  //:: ExpectedOutput(assert.failed:assertion.false)
  assert false
}

