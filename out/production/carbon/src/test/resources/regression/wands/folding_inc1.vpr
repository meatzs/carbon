// Any copyright is dedicated to the Public Domain.
// http://creativecommons.org/publicdomain/zero/1.0/

field f: Int
field g: Ref
field h: Ref

method test02(x: Ref) {
  package true --* (packaging (false --* folding P(x) in true) in true)
  
  //:: ExpectedOutput(assert.failed:assertion.false)
  assert false
}

method test03(x:Ref) 
requires acc(P(x),1/2)
{
  package acc(P(x),1/2) --* acc(P(x))
}

method test04(x:Ref)
{
  package acc(x.f) --* packaging (acc(x.f) --* folding Q(x) in false) in true 

  //:: ExpectedOutput(assert.failed:assertion.false)
  assert false
}


method test06(x:Ref)
{
  //:: ExpectedOutput(package.failed:insufficient.permission)
  package acc(x.f) --* folding P(x) in acc(x.f) //should fail
}


predicate P(x: Ref) {
  acc(x.f)
}

predicate Q(x: Ref) {
  acc(x.f)&&acc(x.f)
}


  