// Any copyright is dedicated to the Public Domain.
// http://creativecommons.org/publicdomain/zero/1.0/

field f: Int
field g: Int 

predicate Single(this: Ref) {
  acc(this.f) 
}

function sum(p: Ref): Int
  requires acc(Single(p))
{
  unfolding acc(Single(p)) in p.f
}

method t01(xs:Ref)
requires acc(Single(xs)) 
{
  var i:Int
  i := sum(xs) 
   
  unfold Single(xs) 
  package true --* (folding Single(xs) in acc(Single(xs)) && sum(xs)==i) 
  
  //:: ExpectedOutput(assert.failed:assertion.false)
  assert false
}
