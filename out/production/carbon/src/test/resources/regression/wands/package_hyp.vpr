// Any copyright is dedicated to the Public Domain.
// http://creativecommons.org/publicdomain/zero/1.0/

field f: Int
field g: Ref
field h: Ref

method test01(x: Ref) 
requires acc(x.f)
{
  package acc(x.f)&&acc(x.f) --* false //theoretically should be packaged since LHS is inconsistent
  package acc(x.f)&&acc(x.f) --* acc(x.f)&&acc(x.f)&&false //here inconsistency is also seen in right hand side 
  
  //:: ExpectedOutput(assert.failed:assertion.false)
  assert false
}

method test02(x: Ref) 
requires acc(x.f)
{
  package acc(x.f)&&x.f==2&&x.f==3 --* false 
  
  //:: ExpectedOutput(assert.failed:assertion.false)
  assert false 
}

method test03(x: Ref) 
requires acc(x.f)
{
  package (acc(x.f)&&x.f==2&&x.f==3) --* packaging (true --* false) in false 

  //:: ExpectedOutput(assert.failed:assertion.false)
  assert false   
}

method test05(x:Ref) 
{
  //:: ExpectedOutput(package.failed:assertion.false)
  package true --* packaging (true --* false) in true   
  //fails since inner package fails even though true --* true always holds in any footprint
}

method test04(x:Ref)
{
  package (acc(x.f)&&acc(x.f)) --* packaging (true --* false) in false  
  //:: ExpectedOutput(assert.failed:assertion.false)
  assert false
}