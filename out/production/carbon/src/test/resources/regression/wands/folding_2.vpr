// Any copyright is dedicated to the Public Domain.
// http://creativecommons.org/publicdomain/zero/1.0/

field f: Int
field g: Ref
field h: Ref

method test01(x:Ref) 
requires acc(x.f,1/2)
{
  package acc(x.f,1/2) --* (folding P(x) in (folding Q(x) in acc(P(x))&&acc(Q(x))))
  
  //:: ExpectedOutput(exhale.failed:insufficient.permission)
  exhale(acc(x.f,1/2)) //should fail

}

method test02(x:Ref) 
requires acc(x.f)
{
  package acc(x.f,1/2) --* (folding P(x) in (folding Q(x) in acc(P(x))&&acc(Q(x))))
  exhale(acc(x.f,1/2)) //should succeed
     
  //:: ExpectedOutput(assert.failed:assertion.false)
  assert false
}

method test03(x:Ref,y:Ref) 
requires acc(x.f,1/2) && acc(y.f,1/2)
{
  package acc(x.f,1/2) --* (folding P(x) in (folding Q(x) in (folding P(y) in acc(P(x))&&acc(Q(x))&&acc(P(y)))))
  
  //:: ExpectedOutput(assert.failed:assertion.false)
  assert false
}

predicate P(x: Ref) {
  acc(x.f,1/2)
}

predicate Q(x: Ref) {
  acc(x.f,1/2)
}


  