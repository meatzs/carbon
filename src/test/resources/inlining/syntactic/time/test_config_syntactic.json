[
{ 
  "file":"array_list_error0.vpr",
  "bound":1,
  "entry":"client_create",
  "sc_holds":true,
  "errors":[]
},
{ 
  "file":"array_list_error1.vpr",
  "bound":1,
  "entry":"client_create",
  "sc_holds":true,
  "errors":[
    {"tag": "fold.failed:insufficient.permission"}
  ]
},
{ 
  "file":"array_list_error0.vpr",
  "bound":1,
  "entry":"client_addAtEnd",
  "sc_holds":true,
  "errors":[]
},
{ 
  "file":"array_list_error1.vpr",
  "bound":1,
  "entry":"client_addAtEnd",
  "sc_holds":true,
  "errors":[{"tag": "assignment.failed:insufficient.permission"}, 
    {"tag": "fold.failed:assertion.false"}]
},
{ 
  "file":"array_list_error0.vpr",
  "bound":2,
  "entry":"client_insert",
  "sc_holds":true,
  "errors":[]
},
{ 
  "file":"array_list_error1.vpr",
  "bound":2,
  "entry":"client_insert",
  "sc_holds":true,
  "errors":[
    {"tag": "assignment.failed:insufficient.permission"}, 
    {"tag": "assignment.failed:insufficient.permission"}
  ]
},
{ 
  "file":"array_max_elim_error0.vpr",
  "bound":3,
  "entry":"client",
  "sc_holds":true,
  "errors":[]
},
{ 
  "file":"array_max_elim_error1.vpr",
  "bound":3,
  "entry":"client",
  "sc_holds":true,
  "errors":[
    {"tag": "assert.failed:assertion.false"}
  ]
},
{ 
  "file":"array_max_straightforward_error0.vpr",
  "bound":3,
  "entry":"client",
  "sc_holds":true,
  "errors":[]
},
{ 
  "file":"array_max_straightforward_error1.vpr",
  "bound":3,
  "entry":"client",
  "sc_holds":true,
  "errors":[
    {"tag": "assert.failed:assertion.false"}
  ]
},
{ 
  "file":"binary_search_seq_error0.vpr",
  "bound":2,
  "entry":"client",
  "sc_holds":true,
  "errors":[]
},
{ 
  "file":"binary_search_seq_error1.vpr",
  "bound":2,
  "entry":"client",
  "sc_holds":true,
  "errors":[
    {"tag": "assert.failed:assertion.false"}
  ]
},
{ 
  "file":"binary_search_QP_error0.vpr",
  "bound":2,
  "entry":"client",
  "sc_holds":true,
  "errors":[]
},
{ 
  "file":"binary_search_QP_error1.vpr",
  "bound":2,
  "entry":"client",
  "sc_holds":true,
  "errors":[
    {"tag": "assert.failed:assertion.false"}
  ]
},
{ 
  "file":"dutch_flag_error0.vpr",
  "bound":3,
  "entry":"client",
  "sc_holds":true,
  "errors":[]
},
{ 
  "file":"dutch_flag_error1.vpr",
  "bound":3,
  "entry":"client",
  "sc_holds":true,
  "errors":[
    {"tag": "assignment.failed:insufficient.permission"}
  ]
},
{ 
  "file":"graph_copy_error0.vpr",
  "bound":3,
  "entry":"client",
  "sc_holds":true,
  "errors":[]
},
{ 
  "file":"graph_copy_error1.vpr",
  "bound":2,
  "entry":"client",
  "sc_holds":true,
  "errors":[
    {"tag": "call.precondition:assertion.false"}
  ]
},
{ 
  "file":"graph_copy_error2.vpr",
  "bound":3,
  "entry":"client",
  "sc_holds":true,
  "errors":[
    {"tag": "assignment.failed:insufficient.permission"}
  ]
},
{ 
  "file":"graph_marking.vpr",
  "bound":1,
  "entry":"client_success",
  "sc_holds":true,
  "errors":[]
},
{ 
  "file":"graph_marking.vpr",
  "bound":1,
  "entry":"client_failure",
  "sc_holds":true,
  "errors":[
    {"tag": "assert.failed:assertion.false"}
  ]
},
{ 
  "file":"guarded_by_monitor_error0.vpr",
  "bound":1,
  "entry":"test",
  "sc_holds":true,
  "errors":[]
},
{ 
  "file":"guarded_by_monitor_error1.vpr",
  "bound":1,
  "entry":"insert",
  "sc_holds":true,
  "errors":[
    {"tag": "postcondition.violated:assertion.false"}
  ]
},
{ 
  "file":"linked_list_error0.vpr",
  "bound":2,
  "entry":"test",
  "no_fun_pre_sc":"",
  "sc_holds":true,
  "errors":[]
},
{ 
  "file":"linked_list_error1.vpr",
  "bound":1,
  "entry":"insert",
  "sc_holds":true,
  "errors":[
    {"tag": "fold.failed:assertion.false"}
  ]
},
{ 
  "file":"linked_list_error0.vpr",
  "bound":2,
  "entry":"concat_client",
  "sc_holds":true,
  "errors":[
    {"tag": "fold.failed:assertion.false"}
  ]
},
{ 
  "file":"longest_common_prefix.vpr",
  "bound":2,
  "entry":"lcp",
  "sc_holds":true,
  "errors":[]
},
{ 
  "file":"longest_common_prefix.vpr",
  "bound":2,
  "entry":"lcp_error",
  "sc_holds":true,
  "errors":[
    {"tag": "postcondition.violated:assertion.false"},
    {"tag": "postcondition.violated:assertion.false"}
  ]
},
{ 
  "file":"sorted_list.vpr",
  "bound":1,
  "entry":"insert",
  "sc_holds":true,
  "errors":[]
},
{ 
  "file":"sorted_list.vpr",
  "bound":1,
  "entry":"insert_error",
  "sc_holds":true,
  "errors":[
    {"tag": "postcondition.violated:assertion.false"}
  ]
}
]